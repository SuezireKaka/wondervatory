<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="www.wonder.vatory.tool.mapper.CustomObjectMapper">
	
	<resultMap id="rmCustomObjectVO" extends="nsEntity.rmSpaceEntity"
		type="www.wonder.vatory.tool.model.CustomObjectVO">
		<result property="name" column="name" />
		<collection property="customPropertiesList" columnPrefix="prop_"
			resultMap="rmCustomPropertyVO">
		</collection>
		<discriminator javaType="String" column="descrim">
         	<case value="Entity" resultMap="rmCustomEntityVO" />
         	<case value="Relation" resultMap="rmCustomRelationVO" />
        </discriminator>
	</resultMap>
	
	<resultMap id="rmCustomEntityVO" extends="rmCustomObjectVO"
		type="www.wonder.vatory.tool.model.CustomEntityVO">
		<association property="childTool" columnPrefix="c_tool_"
				resultMap="www.wonder.vatory.tool.mapper.ToolMapper.rmToolVO" />
	</resultMap>
	
	<resultMap id="rmCustomRelationVO" extends="rmCustomObjectVO"
		type="www.wonder.vatory.tool.model.CustomRelationVO">
		<result property="oneId" column="one_id" />
		<result property="otherId" column="other_id" />
	</resultMap>
	
	<resultMap id="rmCustomPropertyVO"
		type="www.wonder.vatory.tool.model.CustomPropertyVO">
		<result property="propType" column="prop_type" />
		<result property="propVal" column="prop_val" />
	</resultMap>

	<!-- public List<CustomObjectVO> listAllObject(@Param("toolId") String toolId);  -->
	<select id="listAllObject" resultMap="rmCustomObjectVO">
		SELECT *
		  from t_custom_obj
		 where parent_id = #{toolId}
	</select>
	
	<!-- public List<CustomEntityVO> listAllEntity(@Param("toolId") String toolId);  -->
	<select id="listAllEntity" resultMap="rmCustomEntityVO">
		SELECT *
		  from t_custom_obj
		 where parent_id = #{toolId}
		   and descrim = 'Entity'
	</select>

	<!-- public List<CustomRelationVO> listAllRelation(@Param("toolId") String toolId);-->
	<select id="listAllRelation" resultMap="rmCustomRelationVO">
		SELECT obj.*, rel.one_id one_id, rel.other_id other_id
		  from t_custom_obj obj
		  Left outer join t_custom_rel rel
		    on rel.id = obj.id
		 where obj.parent_id = #{toolId}
		   and obj.descrim = 'Relation'
	</select>
	
	<!-- public List<CustomObjectVO> listPropertiesOf(@Param("objectId") String objectId); -->
	<select id="listPropertiesOf" resultMap="rmCustomPropertyVO">
		SELECT *
		  from t_custom_property
		 where owner_id = #{objectId}
	</select>
	
	<!-- public int countPropertiesOf(@Param("objectId") String objectId); -->
	<select id="countPropertiesOf">
		SELECT count(*)
		  from t_custom_property
		 where owner_id = #{objectId}
	</select>
	
	<!-- public int insertObjectsToSync(@Param("objectId") String objectId, @Param("type") String type,
			@Param("insertList") List<CustomObjectVO> insertList);-->
	<insert id="insertObjectsToSync">
         INSERT INTO t_custom_obj (id, descrim,
         	x_pos, y_pos, x_size, y_size, name,
         	inner_color, outer_color, text_color, parent_id)
         SELECT sub.*
           from
         <foreach open="(" collection="insertList" item="obj" separator=" union all " close=")">
         	SELECT 
         		#{obj.id} as id,
         		#{type} as descrim,
         		#{obj.xPos} as x_pos,
         		#{obj.yPos} as y_pos,
         		#{obj.xSize} as x_size,
         		#{obj.ySize} as y_size,
         		#{obj.name} as name,
         		#{obj.innerColor} as inner_color,
         		#{obj.outerColor} as outer_color,
         		#{obj.textColor} as text_color,
         		#{objectId} as parent_id
         </foreach> sub;
         
         <if test='type.equals("Relation")'>
         	INSERT INTO t_custom_rel (id, one_id, other_id)
         	Select sub.id id, sub.one_id one_id, sub.other_id other_id
         	  from
         	<foreach open="(" collection="insertList" item="rel" separator=" union all " close=")">
				SELECT 
					#{rel.id} as id,
					#{rel.oneId} as one_id,
         			#{rel.otherId} as other_id
		 	</foreach> sub;
		 </if>
    </insert>
	
	<!-- public int insertPropsToSync(@Param("objectId") String objectId, @Param("offset") int offset,
			@Param("insertList") List<CustomPropertyVO> insertList);-->
	<insert id="insertPropsToSync">
		<if test="!(insertList.isEmpty())">
			INSERT INTO t_custom_property(owner_id, level, prop_type, prop_val)
			VALUES
			<foreach item="prop" collection="insertList" separator="," index="index">
				(#{objectId}, (#{index} + #{offset}), #{prop.propType}, #{prop.propVal})
			</foreach>
		</if>
		;
	</insert>
	
	<!-- public int updateAllObjectsFrom(@Param("toolId") String toolId,
			@Param("updateList") List<CustomObjectVO> updateList);-->
	<update id="updateAllObjectsFrom">
		<if test="!(updateList.isEmpty())">
			UPDATE t_custom_obj obj
			  JOIN
			<foreach open="(" item="obj" collection="updateList" separator=" UNION ALL " index="index" close=")">
			<if test="obj.isEdited">
			  <choose>
			    <when test = "index == 0">
				  SELECT #{obj.id} as id, 
				  		#{obj.xPos} as x_pos, #{obj.yPos} as y_pos, #{obj.xSize} as x_size, #{obj.ySize} as y_size,
				  		#{obj.innerColor} as inner_color, #{obj.outerColor} as outer_color, #{obj.textColor} as text_color
			    </when>
			    <otherwise>
				  SELECT #{obj.id},
				  		#{obj.xPos}, #{obj.yPos}, #{obj.xSize}, #{obj.ySize},
				  		#{obj.innerColor}, #{obj.outerColor}, #{obj.textColor}
			    </otherwise>
			  </choose>
			</if>
			</foreach> vals ON obj.id = vals.id
			   SET obj.x_pos = vals.x_pos,
			   		obj.y_pos = vals.y_pos,
			   		obj.x_size = vals.x_size,
			   		obj.y_size = vals.y_size,
			   		obj.inner_color = vals.inner_color,
			   		obj.outer_color = vals.outer_color,
			   		obj.text_color = vals.text_color
			 WHERE obj.parent_id = #{toolId}
		</if>
	</update>
	
	<!-- public int updateAllPropsFrom(@Param("objectId") String objectId,
			@Param("updateList") List<CustomPropertyVO> updateList);-->
	<update id="updateAllPropsFrom">
		<if test="!(updateList.isEmpty())">
			UPDATE t_custom_property prop
			  JOIN (
			<foreach item="prop" collection="updateList" separator=" UNION ALL " index="index" close=")">
			<if test="prop.isEdited">
			  <choose>
			    <when test = "index == 0">
				  SELECT #{index} as LEVEL, #{prop.propType} as prop_type, #{prop.propVal} as prop_val
			    </when>
			    <otherwise>
				  SELECT #{index}, #{prop.propType}, #{prop.propVal}
			    </otherwise>
			  </choose>
			</if>
			</foreach> vals ON prop.level = vals.level
			   SET prop.prop_type = vals.prop_type, prop.prop_val = vals.prop_val
			 WHERE prop.owner_id = #{objectId}
		</if>
	</update>
	
	<!-- public int deleteObjectsToSync(@Param("deleteList") List<CustomObjectVO> deleteList);-->
	<delete id="deleteObjectsToSync">
		DELETE obj.*
		  FROM t_custom_obj obj
		 where obj.id IN
		<foreach open="(" collection="deleteList" item="obj" separator=", " close=")">
			#{obj.id}
		</foreach>;
		DELETE rel.*
		  FROM t_custom_rel rel
		 where rel.id IN
		<foreach open="(" collection="deleteList" item="rel" separator=", " close=")">
			#{rel.id}
		</foreach>;
	</delete>
	
	<!-- public int deletePropsToSync(@Param("objectId") String objectId,
			@Param("border") int border);-->
	<delete id="deletePropsToSync">
		DELETE prop.*
		  from t_custom_property prop
		 where prop.owner_id = #{objectId}
		   and prop.level >= ${border}
	</delete>

</mapper>
