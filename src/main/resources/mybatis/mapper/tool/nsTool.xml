<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="www.wonder.vatory.tool.mapper.ToolMapper">
	<resultMap id="rmToolVO" extends="www.wonder.vatory.work.mapper.WorkMapper.rmWorkVO"
		type="www.wonder.vatory.tool.model.ToolVO">
		<result property="name" column="name" />
		<result property="xToolSize" column="x_tool_size" />
		<result property="yToolSize" column="y_tool_size" />
		<association property="series" columnPrefix="ser_"
				resultMap="www.wonder.vatory.work.mapper.WorkMapper.rmSeriesVO" />
		<association property="writer" columnPrefix="acc_"
				resultMap="www.wonder.vatory.party.mapper.PartyMapper.rmAccountVO" />
	</resultMap>
	
	<!-- public List<ToolVO> listAllFromSeries(
			@Param("seriesId") String seriesId,
			@Param("page") int page);
	<select id="listAllFromSeries" resultMap="rmToolVO">
		SELECT SQL_CALC_FOUND_ROWS *
		  from t_tool
		 where parent_id = #{seriesId}
		   and parent_type = 'series'
		 order by id DESC
		 limit #{paging.seriesLimit} offset #{paging.offset}
	</select>
	→ deprecated : 아래 매소드로 전부 통합  -->
	
	<!-- public List<ToolVO> listAllNextTools(@Param("seriesId") String seriesId,
			@Param("idPath") String idPath, @Param("paging") PagingDTO paging); -->
	<select id="listAllNextTools" resultMap="rmToolVO">
		SELECT SQL_CALC_FOUND_ROWS t.*, acc.id acc_id, acc.descrim acc_descrim
		  from t_tool t
		  Left outer join t_alive alive
		    on alive.target_id = t.id
		  Left outer join t_account acc
		    on t.writer_id = acc.id
		 where alive.target_table = 't_tool'
		   and alive.alive = 1
		   and t.series_id = #{seriesId}
		   and t.id like CONCAT(#{idPath}, '____')
		 order by t.id DESC
		 limit #{paging.seriesLimit} offset #{paging.offset}
	</select>
	
	<!-- public ToolVO getToolById(@Param("toolId") String toolId); -->
	<select id="getToolById" resultMap="rmToolVO">
		SELECT t.*,
			ser.id ser_id, ser.descrim ser_descrim,
				wrt.id ser_acc_id, wrt.descrim ser_acc_descrim, 
			acc.id acc_id, acc.descrim acc_descrim
		  from t_tool t
		  Left outer join t_work ser
		    on t.series_id = ser.id
		  Left outer join t_account acc
		    on t.writer_id = acc.id
		  Left outer join t_account wrt
		    on t.writer_id = acc.id
		 where t.id = #{toolId}
	</select>
	
	<!-- public int createToolSkin(@Param("writer") AccountVO writer,
			@Param("toolSkin") ToolVO toolSkin, @Param("seriesId") String seriesId);-->
	<insert id="createToolSkin">
		<selectKey keyProperty="toolSkin.id" resultType="String" order="BEFORE">
    		select concat(#{toolSkin.id}, NEXT_PK('s_tool'))
  		</selectKey>
		INSERT INTO t_tool(id, series_id, writer_id, h_tier, x_tool_size, y_tool_size, NAME)
		VALUES (#{toolSkin.id}, #{seriesId}, #{writer.id}, #{toolSkin.hTier}, #{toolSkin.xToolSize}, #{toolSkin.yToolSize}, #{toolSkin.name});
		insert into t_alive(target_id, target_table)
	    VALUES (#{toolSkin.id}, 't_tool');
	</insert>
	
	<!-- public int updateToolSkin(@Param("toolSkin") ToolVO toolSkin); -->
	<update id="updateToolSkin">
		UPDATE t_tool
		   SET name = #{toolSkin.name},
		       x_tool_size = #{toolSkin.xToolSize},
		       y_tool_size = #{toolSkin.yToolSize},
		       upt_dt = current_timestamp()
		 WHERE id = #{toolSkin.id}
	</update>
	
	<!-- public int public int deleteTool(String id);-->
	<delete id="deleteTool">
	update t_alive
	   set alive = 0
	 where target_id like CONCAT(#{id}, '%')
	   and target_table = 't_tool'
	</delete>

</mapper>
